(function(){AFRAME.registerComponent("rplane",{schema:{radius:{type:"number",default:0.3},topLeftRadius:{type:"number",default:-1},topRightRadius:{type:"number",default:-1},bottomLeftRadius:{type:"number",default:-1},bottomRightRadius:{type:"number",default:-1}},init:function(){this.updateGeometry();const geometry=this.el.getAttribute("geometry");this.prevWidth=geometry&&geometry.width?geometry.width:1;this.prevHeight=geometry&&geometry.height?geometry.height:1},update:function(){this.updateGeometry()},tick:function(){const geometry=this.el.getAttribute("geometry");const currentWidth=geometry&&geometry.width?geometry.width:1;const currentHeight=geometry&&geometry.height?geometry.height:1;if(currentWidth!==this.prevWidth||currentHeight!==this.prevHeight){this.prevWidth=currentWidth;this.prevHeight=currentHeight;this.updateGeometry()}},updateGeometry:function(){const data=this.data;const geometry=this.el.getAttribute("geometry");const width=geometry&&geometry.width?geometry.width:1;const height=geometry&&geometry.height?geometry.height:1;const newGeometry=this.createRoundedPlane(width,height,data.radius,data.topLeftRadius,data.topRightRadius,data.bottomLeftRadius,data.bottomRightRadius);const mesh=this.el.getObject3D("mesh");if(mesh){if(mesh.geometry){mesh.geometry.dispose()}mesh.geometry=newGeometry}},createRoundedPlane:function(width,height,radius,tlRadius,trRadius,brRadius,blRadius){const shape=new THREE.Shape();const radii=[tlRadius!==-1?tlRadius:radius,trRadius!==-1?trRadius:radius,brRadius!==-1?brRadius:radius,blRadius!==-1?blRadius:radius];function createRoundedShape(t,e,a,i,d,o,u,r,s){o=o||1e-5;u=u||1e-5;r=r||1e-5;s=s||1e-5;t.moveTo(e,a+o);t.lineTo(e,a+d-o);t.quadraticCurveTo(e,a+d,e+o,a+d);t.lineTo(e+i-u,a+d);t.quadraticCurveTo(e+i,a+d,e+i,a+d-u);t.lineTo(e+i,a+s);t.quadraticCurveTo(e+i,a,e+i-s,a);t.lineTo(e+r,a);t.quadraticCurveTo(e,a,e,a+r)}createRoundedShape(shape,0,0,width,height,radii[0],radii[1],radii[2],radii[3]);const geometry=new THREE.ShapeGeometry(shape);geometry.center();return geometry}});AFRAME.registerPrimitive("a-rplane",{defaultComponents:{geometry:{primitive:"plane"},material:{shader:"standard"},rplane:{}},mappings:{width:"geometry.width",height:"geometry.height",color:"material.color",opacity:"material.opacity",transparent:"material.transparent",radius:"rplane.radius","top-left-radius":"rplane.topLeftRadius","top-right-radius":"rplane.topRightRadius","bottom-left-radius":"rplane.bottomLeftRadius","bottom-right-radius":"rplane.bottomRightRadius"}})})();
